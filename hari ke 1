Rangkuman Belajar PBO

part ke 1

Code 1 Hello World

void main(List<String> arguments) {
  print('Hello World');
}

output : 
Hello World


Code 2 input

import 'dart:io';

main(List<String> arguments) {
  String input = stdin.readLineSync();
  print(input);
}

output : 
lapar
lapar

code 3 kalkulator sederhana

import 'dart:io';

main(List<String> arguments) {
  String input = stdin.readLineSync();
  double number = double.tryParse(input);
  print(number + 10);
}

output : 
20
30

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 2

''Code 1''
import 'dart:io';

main(List<String> arguments) {
  int number = int.tryParse(stdin.readLineSync());

  if (number > 0) {
    print('positif');
  } else if (number < 0) {
    print('negatif');
  } else {
    print('nol');
  }
}

output:
1 
positif
-1
negatif
0
nol

''Code 2''
import 'dart:io';

main(List<String> arguments) {
  int number = int.tryParse(stdin.readLineSync());
  String output;

  output = (number > 0) ? 'positif' : 'negatif atau nol';

  print(output);
}

output :
1
poisitif
-2
negatif atau nol

''Code 3''
import 'dart:io';

main(List<String> arguments) {
  int number = int.tryParse(stdin.readLineSync());
  String output;

  print((number > 0) ? number : number * -1);
}

output : 
1
1
-5
5

''Code 4''
import 'dart:io';

main(List<String> arguments) {
  int number = int.tryParse(stdin.readLineSync());

  switch (number) {
    case 0:
      print('nol');
      break;
    case 1:
      print(number);
      print('satu');
      break;
    case 2:
      print('dua');
      break;
    default:
      print('bilangan lain');
  }
}

output :
1
1
satu
4
bilangan lain

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 3

''Code 1 for ''
import 'dart:io';

main(List<String> arguments) {
  for (int counter = 0; counter < 5; counter += 1) {
    print('halo');
  }
}

output : 
halo
halo
halo
halo
halo

''Code 2 while ''
import 'dart:io';

main(List<String> arguments) {
  int i = 0;
  while (i < 5) {
    print('halo ke ' + i.toString());
    i += 1;
  }
}

output:
halo ke 0
halo ke 1
halo ke 2
halo ke 3
halo ke 4

''Code 3''
  int x = 5;
  do {
    print('dododo ke ' + x.toString());
    x += 1;
  } while (x < 5);
}
'
output :
dododo ke 5

''Code 4''
import 'dart:io';

main(List<String> arguments) {
  int a, b;
  a = 10;
  b = a++;
  print(a.toString() + ' - ' + b.toString());

  a = 10;
  b = ++a;
  print(a.toString() + ' - ' + b.toString());
}

output :
11 - 10
11 - 11

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Part ke 4

''Code 1''
import 'dart:io';

double luas_segiempat( double panjang, double lebar ){
  return panjang * lebar; 
}

void sapa_penonton(){
  print ('hello penonton');
}

main(List<String> arguments){
  double p, l, luas;

  p = double.tryParse(stdin.readLineSync());
  l = double.tryParse(stdin.readLineSync());

  print(luas_segiempat(p, l));
}

output : 
10
20
200.0

''Code 2''
import 'dart:io';

String say( Stirng from, String message, { String to, String appName}) {
  return from + ' say ' + message + (( to != null ) ? ' to ' + to : '' ) + (( appName != null ) ? 'via' + appName : '');
}

main(List<String> arguments){
  print(say('Johny','Hello', appName : 'whatsapp'));
  print(say('Johny','Hello', 'Doloris'));
}

output:
Johny say Hello via whatsapp
Johny say Hello to Doloris

''Code 3''
import 'dart:io';

double luas_segiempat(double panjang, double lebar ) => panjang *lebar;

int doMathOperator(int number1, int number2, Function operator ){
  return operator(number1, number2);
}

main(List<String> arguments){
  Function f;
  f = luas_segiempat;
  print(say('Johny','Hello', appName : 'whatsapp'));
  print(say('Johny','Hello', 'Doloris'));
  print(f(6.0, 3.0));
  print(doMathOperator(1, 2 (a, b) => a * b));
}

output :
Johny say Hello via whatsapp
Johny say Hello to Doloris
2

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Hari ke 5

''Code 1''
import 'dart:io';

main(List<String> arguments){
  List<int> myList = [];
  List<int> list = [1, 2, 3];

  myList.add(10);
  myList.addAll(list);
  myList.insert(1, 20);
  myList.insertAll(3, [30, 40, 20]);
  // myList.removeRange(1, 4);

  myList.forEach((bilangan){
    print(bilangan);
  });

}

output:
10
40
20
2
3

''Code 2''
import 'dart:io';

main(List<String> arguments){
  List<int> myList = [1,2 ,3,4, 5, 6, 7];
  List<int> list = [1, 2, 3];

  myList.removeRange(1, 4);

  myList.forEach((bilangan){
    print(bilangan);
  });

}

output:
1
5
6
7

''Code 3''
import 'dart:io';

main(List<String> arguments){
  List<int> myList = [7, ,6 ,1, 4, 3, 6, 2];
  List<int> list = [1, 2, 3];

  if (myList.every((number) => number % 2 != 0)) {
    print('Semua ganjil');
  } else {
    print('tidak semua ganjil');
  }

  myList.forEach((bilangan) {
    print(bilangan);
  }); 
}

output:
7
1
6
4
3
6
2

''Code 4''
import 'dart:io';

main(List<String> arguments){
  List<int> myList = [1,1,6,4,3,6,2];
  List<int> list = [];

  list = myList.map((number) => 'angka ' + number.toString()).toList();

  list.forEach((str) {
    print(str);
  }); 
}

output:
angka 1
angka 1
angka 6
angka 4
angka 3
angka 6
angka 2

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Part ke 6

''Code 1''
import 'dart:io';

main(List<String> arguments){
  PersegiPanjang kotak1, kotak2;
  print(kotak1.toString());
}

class PersegiPanjang{
  double panjang;
  double lebar;

  double hitungLuas(){
    return this.panjang * lebar;  
  }
}

output :
null

''Code 2''
import 'dart:io';

main(List<String> arguments){
  PersegiPanjang kotak1, kotak2;
  double luasKotak1;

  kotak1 = new PersegiPanjang();
  kotak1.panjang = 2;
  kotak1.lebar = 3;

  kotak2 = PersegiPanjang();
  kotak2.panjang = double.tryParse(stdin.readLineSync());
  kotak2.lebar = double.tryParse(stdin.readLineSync());

  luasKotak1 = kotak1.hitungLuas();

  print(luasKotak1 + kotak2.hitungLuas());
}

class PersegiPanjang{
  double panjang;
  double lebar;

  double hitungLuas(){
    return this.panjang * lebar;
  }
}

output:
4
5
26.0

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Part ke 7

''Code PersegiPanjang''
class PersegiPanjang {
  double _panjang;
  double _lebar;

  void set lebar(double value) {
    if (value < 0) {
      value *= -1;
    }
    _lebar = value;
  }

  void setPanjang(double value) {
    if (value < 0) {
      value *= -1;
    }
    _panjang = value;
  }

  double get lebar {
    return _lebar;
  }

  double getPanjang() {
    return _panjang;
  }

  double get luas => _panjang * _lebar;
}

''Code main''
import 'dart:io';
import 'package:dart_application_1/persegi_panjang.dart';

main(List<String> arguments) {
  PersegiPanjang kotak1, kotak2;
  double luasKotak1;

  kotak1 = new PersegiPanjang();
  kotak1.setPanjang(2);
  kotak1.lebar = -3;

  kotak2 = PersegiPanjang();
  kotak2.setPanjang(double.tryParse(stdin.readLineSync()));
  kotak2.lebar = double.tryParse(stdin.readLineSync());

  luasKotak1 = kotak1.luas;

  print(luasKotak1 + kotak2.luas);
  print(kotak1.lebar);
}

output: 
1
1
7.0
3.0

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 8

''Code 1''
import 'dart:io';

import 'package:dart_application_1/hero.dart';
import 'package:dart_application_1/monster.dart';
import 'package:dart_application_1/monster_kecoa.dart';
import 'package:dart_application_1/monster_ubur_ubur.dart';

main(List<String> args) async {
  Hero h = Hero();
  Monster monster = MonsterUburUbur();
  List<Monster> monsters = [];

  monsters.add(MonsterUburUbur());
  monsters.add(MonsterKecoa());
  monsters.add(Monster());

  print((monster as MonsterUburUbur).swim());

  // for (Monster m in monsters) {
  //   if (m is MonsterUburUbur) {
  //     print(m.swim());
  //   }
  // }
}

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 9

''Code 1''
import 'package:belajar_inherit/monster.dart';
import 'package:be;ajar_inherit/monster_kecoa.dart';
import 'package:belajar_inherit/monster_ubur_ubur.dart';

main(List<String> arguments) async {
  List<Monster> monsters = [];

  monsters.add(MonsterUburUbur());
  monsters.add(MonsterKecoa());
  monsters.add(MonsterUcoa());

  for ( Monster m in monsters){
    if (m is FlyingMonster) {
      print(m as FlyingMonster).fly();
    }
  }
  
}

output:
Syuuung...
Terbang terbang melayang 


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 10

''Code 1''
import 'package:belajar_inherit/monster.dart';
import 'package:be;ajar_inherit/monster_kecoa.dart';
import 'package:belajar_inherit/monster_ubur_ubur.dart';
import 'package:belajar_inherit/knight';
import 'package:belajar_inherit/flying_monster';
import 'package:belajar_inherit/ucoa';


main(List<String> arguments) async {
  List<Monster> monsters = [];

 knight k = knight();
  print(k.drink());

  // monsters.add(MonsterUburUbur());
  // monsters.add(MonsterKecoa());
  // monsters.add(MonsterUcoa());

  // for ( Monster m in monsters){
  //   if (m is FlyingMonster) {
  //     print(m as FlyingMonster).fly();
  //   }
  // }
  
}

output :
Gluk.. Gluk.. Gluk.. 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 11

''Code 1''  
import 'dart:io';

import 'person.dart';
import 'student.dart';

void main (List<String> arguments) {
  // var input = stdin.readLineSync();

  Person p = Student();

  print(p.name);
}

output :
constructor person
student baru

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 12

''Code 1''
import 'package:belajar_ignore_parameter/ignore.dart';

void main(List<String> arguments){
  var p = Person('David', doingHobby: (_) {
    print('Swimming in the pool');
  });

  p.takeARest();
}

// void davidsHobby(String name){
//   print('$name is swimming');
// }

output:
Swimming in the pool
Exited

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 13

''Code 13''
import 'package:belajar_static_keyword/static_keyword.dart';

void main(List<String> arguments){
  var g { Person('David', 170);

  print(Person.maxAge);
}

output:
150
Exited

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 14

''Code 1''
void main(List<String> arguments) async {
  var p = Person();

  print('job 1');
  print('job 2');
  p.getDataAsync().then((_) {
    print('job 3 : ' + p.name);
  });
  print('job 4');
}

class Person {
  String name = 'default name';

  void getData() {
    name = 'Joko';
    print('get data [done]');
  }
}

output:
job 1
job 2
jpb 4
get data [done]
job 3 : Joko
Exited

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 15

''Code 1''
const pi = 3.14;

void main(List<String> arguments) {
  var a = const ConstClass(number: 5);
  var b = const ConstClass(number: 5);

  print(identical(a,b));
  print(pi);
}

class RegularClass {
  final int number;
  static const myConst = 12;

  RegularClass({this.number}){
    const anotherConst = 14;
    print(anotherConst);
  }
}

class ConstClass{
  final int number;

  const ConstClass({this.number});
}

output: 
true
Exited

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

part ke 16

''Code''


